plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'edu.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.3.2'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'com.zaxxer:HikariCP:5.1.0'
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'

    implementation 'org.springframework.boot:spring-boot-starter-security:3.2.5'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:3.3.3'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'

    //JSON Web Token (JWT) 생성 및 검증을 위한 라이브러리입니다. jjwt-api는 API를 제공하고, jjwt-impl은 구현체를, jjwt-jackson은 Jackson을 통한 JSON 처리를 제공합니다.
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly    'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly    'io.jsonwebtoken:jjwt-jackson:0.12.6'

    // Spring Security OAuth2 Client
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testRuntimeOnly 'com.h2database:h2:2.3.232'
    testImplementation 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    annotationProcessor (
            'jakarta.persistence:jakarta.persistence-api',
            'jakarta.annotation:jakarta.annotation-api',
            'com.querydsl:querydsl-apt:5.1.0:jakarta',
            'org.projectlombok:lombok'
    )

    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    runtimeOnly 'com.h2database:h2'
}

def qDomainPath = 'src/main/generated'

tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(qDomainPath))
}

clean {
    delete file(qDomainPath)
}

tasks.named('test') {
    useJUnitPlatform()
}

jar {
    enabled = false
}